.form-control {
    $input-transition: border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;
    display: block;
    width: 100%;
    padding: var(--input-padding-y, $su-2) var(--input-padding-x, $su-3);
    font-family: var(--input-ff, $ff-body);
    font-size: var(--input-font-size, $fs-sm);
    font-weight: var(--input-font-weight, 400);
    line-height: var(--input-line-height, 1.7);
    color: var(input-color, $base-700);
    background-color: var(--input-bg, transparent);
    background-clip: padding-box;
    border: var(--input-border-width, 1px) solid var(--input-border-color, $border-color);
    appearance: none; // Fix appearance for date inputs in Safari
    border-radius: var(--input-border-radius, $radius-0);
    box-shadow: var(--input-box-shadow, $shadow-sm);
    transition: var(--input-transition,  $input-transition);
  
    &[type="file"] {
      overflow: hidden; // prevent pseudo element button overlap
  
      &:not(:disabled):not([readonly]) {
        cursor: pointer;
      }
    }
  
    // Customize the `:focus` state to imitate native WebKit styles.
    &:focus {
      color: var(--input-focus-color);
      background-color: var(--input-focus-bg);
      border-color: var(--input-focus-border-color);
      outline: 0;
    }
  
    // Add some height to date inputs on iOS
    // https://github.com/twbs/bootstrap/issues/23307
    // TODO: we can remove this workaround once https://bugs.webkit.org/show_bug.cgi?id=198959 is resolved
    &::-webkit-date-and-time-value {
      // Multiply line-height by 1em if it has no unit
      height: if(unit($input-line-height) == "", $input-line-height * 1em, $input-line-height);
    }
  
    // Placeholder
    &::placeholder {
      color: var(--input-placeholder-color, $base-gray-400);
      // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
      opacity: 1;
    }
  
    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &:disabled,
    &[readonly] {
      background-color: var(--input-disabled-bg, $base-gray-400);
      border-color: var(--input-disabled-border-color, $base-gray-200);
      // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
      opacity: 1;
    }
  
    // File input buttons theming
    &::file-selector-button {
      padding: $input-padding-y $input-padding-x;
      margin: (-$input-padding-y) (-$input-padding-x);
      margin-inline-end: $input-padding-x;
      color: $form-file-button-color;
      @include gradient-bg($form-file-button-bg);
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: $input-border-width;
      border-radius: 0; // stylelint-disable-line property-disallowed-list
      @include transition($btn-transition);
    }
  
    &:hover:not(:disabled):not([readonly])::file-selector-button {
      background-color: $form-file-button-hover-bg;
    }
  
    &::-webkit-file-upload-button {
      padding: $input-padding-y $input-padding-x;
      margin: (-$input-padding-y) (-$input-padding-x);
      margin-inline-end: $input-padding-x;
      color: $form-file-button-color;
      @include gradient-bg($form-file-button-bg);
      pointer-events: none;
      border-color: inherit;
      border-style: solid;
      border-width: 0;
      border-inline-end-width: $input-border-width;
      border-radius: 0; // stylelint-disable-line property-disallowed-list
      @include transition($btn-transition);
    }
  
    &:hover:not(:disabled):not([readonly])::-webkit-file-upload-button {
      background-color: $form-file-button-hover-bg;
    }
  }
  
  // Readonly controls as plain text
  //
  // Apply class to a readonly input to make it appear like regular plain
  // text (without any border, background color, focus indicator)
  
  .form-control-plaintext {
    display: block;
    width: 100%;
    padding: $input-padding-y 0;
    margin-bottom: 0; // match inputs if this class comes on inputs with default margins
    line-height: $input-line-height;
    color: $input-plaintext-color;
    background-color: transparent;
    border: solid transparent;
    border-width: $input-border-width 0;
  
    &.form-control-sm,
    &.form-control-lg {
      padding-right: 0;
      padding-left: 0;
    }
  }
  
  // Form control sizing
  //
  // Build on `.form-control` with modifier classes to decrease or increase the
  // height and font-size of form controls.
  //
  // Repeated in `_input_group.scss` to avoid Sass extend issues.
  
  .form-control-sm {
    min-height: $input-height-sm;
    padding: $input-padding-y-sm $input-padding-x-sm;
    @include font-size($input-font-size-sm);
    @include border-radius($input-border-radius-sm);
  
    &::file-selector-button {
      padding: $input-padding-y-sm $input-padding-x-sm;
      margin: (-$input-padding-y-sm) (-$input-padding-x-sm);
      margin-inline-end: $input-padding-x-sm;
    }
  
    &::-webkit-file-upload-button {
      padding: $input-padding-y-sm $input-padding-x-sm;
      margin: (-$input-padding-y-sm) (-$input-padding-x-sm);
      margin-inline-end: $input-padding-x-sm;
    }
  }
  
  .form-control-lg {
    min-height: $input-height-lg;
    padding: $input-padding-y-lg $input-padding-x-lg;
    @include font-size($input-font-size-lg);
    @include border-radius($input-border-radius-lg);
  
    &::file-selector-button {
      padding: $input-padding-y-lg $input-padding-x-lg;
      margin: (-$input-padding-y-lg) (-$input-padding-x-lg);
      margin-inline-end: $input-padding-x-lg;
    }
  
    &::-webkit-file-upload-button {
      $input-padding-y-lg: $su-3;
      $input-padding-x-lg: $su-4;
      padding: var(--input-padding-y-lg, $input-padding-y-lg) var(--input-padding-x-lg, $input-padding-x-lg);
      margin: var(--input-margin-y-lg, -$input-padding-y-lg) var(--input-padding-x-lg, -$input-padding-x-lg);
      margin-inline-end: var(--input-padding-x-lg, $input-padding-x-lg);
    }
  }
  
  // Make sure textareas don't shrink too much when resized
  // https://github.com/twbs/bootstrap/pull/29124
  // stylelint-disable selector-no-qualifying-type
  textarea {
    @each $name, $height in ("sm" "36px", "lg" "48px") {
        &.form-control-#{$name} {
            min-height: var(--input-#{$name}-height, #{$height});
        }    
    }
  }
  